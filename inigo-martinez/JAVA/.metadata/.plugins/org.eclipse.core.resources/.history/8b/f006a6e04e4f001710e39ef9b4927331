package prueba;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

/**
 * El programa funciona correctamente
 * 
 *  Hacer funcionar goblins. Esta última parte te la dejo
 * a ti Jon Ander.
 **/

public class Prueba {

	static int bajasJug, bajasMaq;
	static Scanner teclado = new Scanner(System.in);

	public static void main(String args[]) {

		List<Unidad> ejercMaqu = new ArrayList<Unidad>();
		List<Unidad> ejercJugador = new ArrayList<Unidad>();

		int eleccion, tamanio;

		System.out.println("Elige uno de los bandos:");
		System.out.println("1.- Humanos");
		System.out.println("2.- Orcos");
		System.out.println("3.- Los poderosos Goblins[Aun en fase Alpha]");
		System.out.println("Recuerdo que las aldeas se defienden con un minimo:");
		System.out.println("Humanos ---> 20 soldados");
		System.out.println("Orcos ---> 50 soldados");
		System.out.println("Goblins ---> 80 soldados");

		eleccion = teclado.nextInt();

		System.out.println("Elige la raza ENEMIGA");
		System.out.println("1.- Humanos");
		System.out.println("2.- Orcos");

		int eleccEnemiga = teclado.nextInt();

		System.out.print("Introduce la cantidad de soldados de tu ejercito: ");
		tamanio = teclado.nextInt();
		try {

			switch (eleccion) {

			case 1:
				// Humanos
				crearEjercito("Humano", tamanio, ejercJugador);
				break;

			case 2:

				crearEjercito("Orco", tamanio, ejercJugador);
				break;

			case 3:
				// GOBLINS
				crearEjercito("Goblin", tamanio, ejercJugador);

				break;

			default:
				System.out.println("Opción no valida");

			}
			switch (eleccEnemiga) {
			case 1:
				// Humanos
				if (tamanio > 20)
					crearEjercito("Humano", tamanio, ejercMaqu);
				else
					crearEjercito("Humano", 20, ejercMaqu);
				break;

			case 2:// ORCOS
				if (tamanio > 50)
					crearEjercito("Orco", tamanio, ejercMaqu);
				else
					crearEjercito("Orco", 50, ejercMaqu);
				break;

			case 3:
				// GOBLINS
				if (tamanio > 80)
					crearEjercito("Goblin", tamanio, ejercMaqu);
				else
					crearEjercito("Goblin", 80, ejercMaqu);

				break;

			default:
				System.out.println("Opción no valida");

			}
			do {

				bajasMaq = combate(ejercJugador, ejercMaqu, bajasMaq);
				bajasJug = combate(ejercMaqu, ejercJugador, bajasJug);

				System.out.println(bajasJug);
				System.out.println(bajasMaq);
				System.out.println("TOTAL " + (bajasMaq + bajasJug));

			} while (!ejercMaqu.isEmpty() && !ejercJugador.isEmpty());
			
			mensajesFinal(ejercMaqu,ejercJugador);
			eventos();

		} catch (Exception e) {
			System.out.println(e.getMessage());
		}

		teclado.close();
	}

	public static void crearEjercito(String raza, int tamanio, List<Unidad> ejercito) {
		Unidad soldado;

		for (int i = 0; i < tamanio; i++) {

			switch (raza) {
			case "Humano":
				soldado = new Humano();
				ejercito.add(soldado);
				break;
			case "Orco":
				soldado = new Orco();
				ejercito.add(soldado);
				break;
			case "Goblin":
				soldado = new Goblin();
				ejercito.add(soldado);
				break;
			}

		}

	}

	public static int combate(List<Unidad> ejercAtac, List<Unidad> ejercDefen, int bajas) {

		int pos = 0;

		for (Unidad unidadAtac : ejercAtac) {

			if (ejercDefen.isEmpty()) {

				return bajas;

			}
			if (pos >= ejercDefen.size())
				pos = 0;

			Unidad enemigo = (Unidad) ejercDefen.get(pos);

			if (unidadAtac.isVivo()) {

				int danioRealizado = (unidadAtac.atacar() - enemigo.getArmadura());

				enemigo.herir(danioRealizado);

				if (!enemigo.isVivo()) {

					bajas++;
					System.out.println("LLEGO " + unidadAtac.getRaza() + " " + bajas);

					ejercDefen.remove(ejercDefen.indexOf(enemigo));

					if (ejercDefen.indexOf(enemigo) == ejercDefen.size()) {
						pos = 0;

					}
					pos++;
				}
			}
		}
		return bajas;
	}

	public static void mensajesFinal(List<Unidad> ...ejercitos){
		
		if (!ejercitos[0].isEmpty()) {

			Unidad auxUnid = ejercitos[0].get(0);
			System.out.println("Ganador es la máquina con el ejercito de " + auxUnid.getRaza());

		} else {

			Unidad auxUnid = ejercitos[1].get(0);
			System.out.println("Ganador es la jugador con el ejercito de " + auxUnid.getRaza());

		}
	}
	
	public static void eventos(){
		
		int evento = (int)Math.floor(Math.random()*(2)+1);
		switch(evento){
		
		case 1:
			System.out.println("¡OH! Los muertos piden venganza. ¿ Qué hacemos?");
			 int eleccion=teclado.nextLine();
			
			
		default:
			System.out.println("NO pasó nada. La lluvia cae en el campo de combate.");
		}
		
	}
}
