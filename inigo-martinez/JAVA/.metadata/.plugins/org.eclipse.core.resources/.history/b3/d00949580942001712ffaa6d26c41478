package prueba;

import java.util.ArrayList;

public class Humanos implements Razas {

	ArrayList<Humano> Humanos = new ArrayList<Humano>();
	private int bajas;

	public int getBajas() {
		return bajas;
	}

	public void setBajas(int bajas) {
		this.bajas += bajas;
	}

	public Humanos(int tamanio) {
		Creacion(tamanio);
	}

	@Override
	public ArrayList<Humano> Creacion(int tamanio) {

		for (int i = 0; i < tamanio; i++) {

			Humano soldado = new Humano();

			Humanos.add(soldado);
		}

		return Humanos;

	}

	@Override
	public void combate() {

		ArrayList<Orco> ejercitoOrco = Prueba.Orcos.Orcos;

		int pos = 0;

		for (Humano soldadoSelecc : Humanos) {

			if (pos >= ejercitoOrco.size())
				pos = 0;

			Object enemigo = ejercitoOrco.get(pos);

			Orco orco = (Orco) enemigo;

			if (!orco.isVivo()) {

				for (int i = ejercitoOrco.lastIndexOf(orco); i < ejercitoOrco.size() - 1 && !orco.isVivo(); i++) {

					orco = ejercitoOrco.get(i);

				}

			}

			if (soldadoSelecc.isVivo()) {

				switch (orco.getRaza()) {

				case "Orco":

					Orco enemigoOrco = (Orco) enemigo;

					int vida = (orco.getArmadura() - soldadoSelecc.atacar());
					
					orco.setPV(-vida);

					if (enemigoOrco.getPV()==0) {

						Prueba.Orcos.setBajas(1);
						System.out.println("LLEGO HUMANOS   " + Prueba.Orcos.getBajas());

						Orco auxOrco = null;
						auxOrco = ejercitoOrco.get(ejercitoOrco.size() - 1);
						ejercitoOrco.set(ejercitoOrco.size() - 1, enemigoOrco);
						ejercitoOrco.remove(ejercitoOrco.size() - 1);

					} else {

						orco.setPV(-vida);

					}
					if (ejercitoOrco.indexOf(enemigo) == ejercitoOrco.size()) {
						pos = 0;

					}
					pos++;

				}
			}

		}

	}
}
